\input texinfo
@c -*-texinfo-*-

@c %**start of header
@setfilename config.info
@documentencoding UTF-8
@settitle Guile Config Reference Manual
@c %**end of header

@include version.texi

@copying
Copyright @copyright{} 2015 Alex Sassmannshausen

Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.3 or
any later version published by the Free Software Foundation; with no
Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.  A
copy of the license is included in the section entitled ``GNU Free
Documentation License''.
@end copying

@dircategory Guile
@direntry
* Guile Config: (Config).       Declarative program configuration
@end direntry

@titlepage
@title The Complete Guile Config Manual
@subtitle Using & Contributing to Guile Config
@author Alex Sassmannshausen

@page
@vskip 0pt plus 1filll
Edition @value{EDITION} @*
@value{UPDATED} @*

@insertcopying
@end titlepage

@contents

@c *********************************************************************
@node Top
@top Guile Config

This document describes Guile Config version @value{VERSION}.

@menu
* Introduction::                The need for Guile Config.
* Private Options::             Internal configuration options.
* Public Options::              Commandline options.
* Open Options::                Configuration file options.

* Contributing::                Contributing to the Guile Config project.
* Acknowledgments::             Thanks!
* GNU Free Documentation License::  The license of this manual.
* Concept Index::               Concepts.
* Function Index::              Functions.
@end menu

@c *********************************************************************
@node Introduction
@chapter Introduction

Guile Config is a declarative configuration language for applications.
In one sentence: it allows you to specify all internal, commandline and
configuration file variables, after which, at run-time, it will handle
configuration file creation and parsing, commandline parsing,
--help/--usage and --version output.

Guile Config builds upon the excellent @code{(ice-9 getopt-long)}
module, augmenting it with configuration file management, and recursive
sub-command management.

Guile Config internally uses a monad: the IO monad, and can be used in
IO monadic style or coventional style.

@c *********************************************************************
@node Private Options
@chapter Private Options

@c *********************************************************************
@node Public Options
@chapter Public Options

@c *********************************************************************
@node Open Options
@chapter Open Options

@c *********************************************************************
@node Contributing
@chapter Contributing

Guile Config is an experiment in truly self-directed study.  This experiment is
ongoing and open to your participation!  Get in touch with the project
on @email{alex@@pompo.co}.  The project welcomes ideas,
bug reports, patches, or feedback.

Please see the HACKING file that comes with the Guile Config source code
for practical details about contributions.

@c *********************************************************************
@node Acknowledgments
@chapter Acknowledgments

Guile Config does what it does in large part by standing on the shoulders of
giants.

@c *********************************************************************
@node GNU Free Documentation License
@appendix GNU Free Documentation License

@include fdl-1.3.texi

@c *********************************************************************
@node Concept Index
@unnumbered Concept Index
@printindex cp

@c *********************************************************************
@node Function Index
@unnumbered Function Index
@printindex fn

@bye

@c Local Variables:
@c ispell-local-dictionary: "american";
@c End:
